{"name":"Codemirror.dart","tagline":"A Dart wrapper around the CodeMirror text editor.","body":"# codemirror.dart\r\n\r\n[![Build Status](https://travis-ci.org/google/codemirror.dart.svg?branch=master)](https://travis-ci.org/google/codemirror.dart)\r\n[![Dart strong mode](https://img.shields.io/badge/dart-strong%20mode-blue.svg)](https://github.com/dart-lang/dev_compiler/blob/master/STRONG_MODE.md)\r\n\r\n## What is it?\r\n\r\nA Dart wrapper around the CodeMirror text editor. From \r\n[codemirror.net](http://codemirror.net/):\r\n\r\n> CodeMirror is a versatile text editor implemented in JavaScript for the\r\nbrowser. It is specialized for editing code, and comes with a number of language\r\nmodes and addons that implement more advanced editing functionality.\r\n\r\n## An example\r\n\r\n```dart\r\nMap options = {\r\n  'mode':  'javascript',\r\n  'theme': 'monokai'\r\n};\r\n\r\nCodeMirror editor = new CodeMirror.fromElement(\r\n    querySelector('#textContainer'), options: options);\r\neditor.getDoc().setValue('foo.bar(1, 2, 3);');\r\n```\r\n\r\nSee also our\r\n[example/](https://github.com/google/codemirror.dart/tree/master/example)\r\ndirectory.\r\n\r\n## How do I use it?\r\n\r\nIn your main html file, link to the style sheet:\r\n\r\n    <link href=\"packages/codemirror/codemirror.css\" rel=\"stylesheet\">\r\n    \r\nreference the CodeMirror JavaScript code:\r\n\r\n    <script src=\"packages/codemirror/codemirror.js\"></script>\r\n\r\nand, in your Dart code, import the library:\r\n\r\n    import 'package:codemirror/codemirror.dart';\r\n\r\n## What about modes? Addons?\r\n\r\nThis Dart package ships with several language modes built in. CodeMirror itself\r\nsupports over 100 modes; the modes built into the Dart package include the\r\nusual suspects for web development - `css`, `html`, `dart` and `javascript` as\r\nwell as a few\r\n[others](https://github.com/google/codemirror.dart/blob/master/tool/grind.dart#L122).\r\nIn order to add additional modes, you'll need to reference the mode file from\r\nyour html entry-point. So,\r\n\r\n    <script src=\"packages/codemirror/mode/lua.js\"></script>\r\n\r\nwill bring in support for Lua.\r\n\r\nSimilarly with addons, we've included a few common ones, and have made the\r\nothers available to import on a case-by-case basis. In order to use the\r\n`active-line` addon, import:\r\n\r\n    <script src=\"packages/codemirror/addon/selection/active-line.js\"></script>\r\n\r\nBe aware that many addons need additional configuration in order to enable then.\r\nThis is generally done by passing values into the options of the CodeMirror\r\nconstructor.\r\n\r\nSome addons are exposed through the main Dart interface. Some are exposed via\r\nside-car Dart libraries available in the main\r\n[package](https://github.com/google/codemirror.dart/tree/master/lib), and some\r\nhave yet to be exposed. Pull requests welcome :)\r\n\r\n## Themes\r\n\r\nBy importing the codemirror.css file:\r\n\r\n    <link href=\"packages/codemirror/codemirror.css\" rel=\"stylesheet\">\r\n\r\nYou get access to all the CodeMirror themes. If you only want a few, or don't\r\nwant to pay the network roundtrip cost to load all the themes, you can import\r\nonly the ones you're interested in:\r\n\r\n    <link href=\"packages/codemirror/theme/monokai.css\" rel=\"stylesheet\">\r\n    <link href=\"packages/codemirror/theme/zenburn.css\" rel=\"stylesheet\">\r\n\r\n## Polymer transformer\r\n\r\nThe Polymer transfomer will inline our theme css references incorrectly.\r\nCurrently, to use the `codemirror` package with Polymer, you'll need to add the\r\nfollowing lines to your `pubspec.yaml` file.\r\n\r\n```yaml\r\n- polymer:\r\n    entry_points: web/foo_bar.html\r\n    inline_stylesheets:\r\n      packages/codemirror/codemirror.css: false\r\n```          \r\n\r\n## Disclaimer\r\n\r\nThis is not an official Google product.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}